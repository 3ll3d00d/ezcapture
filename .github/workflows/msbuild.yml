name: MSBuild

on:
  push:
    tags:
        - '*'

permissions:
  contents: write

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Generate changelog
      id: changelog
      uses: metcalfc/changelog-generator@v4.3.1
      with:
        myToken: ${{ secrets.GITHUB_TOKEN }}

    - name: Create release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: true
        
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        configuration: [ Release, ReleaseTrace, ReleaseNoArch, ReleaseTraceNoArch ]

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - uses: olegtarasov/get-tag@v2.1.4
      id: tagName
      with:
        tagRegex: "^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$"
  
    - name: Setup vcpkg for common
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgJsonGlob: 'common/vcpkg.json'      
        vcpkgConfigurationJsonGlob: 'common/vcpkg-configuration.json'

    - name: Setup vcpkg for mwcapture
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgJsonGlob: 'mwcapture/vcpkg.json'
        vcpkgConfigurationJsonGlob: 'mwcapture/vcpkg-configuration.json'
        
    - name: Setup vcpkg for mwcapture-test
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgJsonGlob: 'mwcapture-test/vcpkg.json'      
        vcpkgConfigurationJsonGlob: 'mwcapture-test/vcpkg-configuration.json'

    - name: Setup vcpkg for bmcapture
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgJsonGlob: 'bmcapture/vcpkg.json'
        vcpkgConfigurationJsonGlob: 'bmcapture/vcpkg-configuration.json'
        
    - name: vcpkg integrate 
      run: vcpkg integrate install
      
    - name: Build
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: |
        [[ -n "${{ steps.tagName.outputs.prerelease }}" ]] && SUFFIX_PARAM="" || SUFFIX_PARAM="/p:vsuffix=${{ steps.tagName.outputs.prerelease }}"
        msbuild /t:Rebuild /p:Configuration=${{ matrix.configuration }} /p:vmajor=${{ steps.tagName.outputs.major }} /p:vminor=${{ steps.tagName.outputs.minor }} /p:vpatch=${{ steps.tagName.outputs.patch }} ${SUFFIX_PARAM}

    - name: Create distribution
      id: create_dist
      shell: bash
      run: |
        if [[ ${{ matrix.configuration }} == "Release" ]]
        then
          MW_ZIP_NAME="mwcapture-${{ github.ref_name }}.zip"
          BM_ZIP_NAME="bmcapture-${{ github.ref_name }}.zip"
        elif [[ ${{ matrix.configuration }} == "ReleaseNoArch" ]]
        then
          MW_ZIP_NAME="mwcapture-${{ github.ref_name }}-release-noarch.zip"
          BM_ZIP_NAME="bmcapture-${{ github.ref_name }}-release-noarch.zip"
        elif [[ ${{ matrix.configuration }} == "ReleaseTrace" ]]
        then
          MW_ZIP_NAME="mwcapture-${{ github.ref_name }}-release-with-logging.zip"
          BM_ZIP_NAME="bmcapture-${{ github.ref_name }}-release-with-logging.zip"
          AX_SUFFIX="-trace"
        elif [[ ${{ matrix.configuration }} == "ReleaseTraceNoArch" ]]
        then
          MW_ZIP_NAME="mwcapture-${{ github.ref_name }}-release-with-logging-noarch.zip"
          BM_ZIP_NAME="bmcapture-${{ github.ref_name }}-release-with-logging-noarch.zip"
          AX_SUFFIX="-trace"
        fi
        7z a ${MW_ZIP_NAME} COPYING 
        7z a ${BM_ZIP_NAME} COPYING 
        if [[ -n "${AX_SUFFIX}" ]]
        then
            cp x64/${{ matrix.configuration }}/mwcapture.ax x64/${{ matrix.configuration }}/mwcapture${AX_SUFFIX}.ax
            cp x64/${{ matrix.configuration }}/bmcapture.ax x64/${{ matrix.configuration }}/bmcapture${AX_SUFFIX}.ax
        fi
        (cd x64/${{ matrix.configuration }}; 7z a ../../${MW_ZIP_NAME} mwcapture${AX_SUFFIX}.ax; 7z a ../../${BM_ZIP_NAME} bmcapture${AX_SUFFIX}.ax)
        (cd mwsdk; 7z a ../${MW_ZIP_NAME} RedistLicense.rtf)
        (cd mwsdk; 7z a ../${MW_ZIP_NAME} MWCaptureRT.exe)
        echo "mw_binary_path=${MW_ZIP_NAME}" >> "$GITHUB_OUTPUT"
        echo "bm_binary_path=${BM_ZIP_NAME}" >> "$GITHUB_OUTPUT"

    - name: Upload asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ github.ref_name }} ${{ steps.create_dist.outputs.mw_binary_path }}
        gh release upload ${{ github.ref_name }} ${{ steps.create_dist.outputs.bm_binary_path }}
